  async function fetchTransactions() {
    // Updated to fetch only 5 transactions
    const transactionsQuery = `
      query WalletTransactions {
        me {
          defaultAccount {
            transactions(walletIds: ["${walletId}"], first: 5) {
              edges {
                node {
                  id
                  status
                  direction
                  memo
                  settlementAmount
                  settlementFee
                  settlementCurrency
                  createdAt
                }
              }
            }
          }
        }
      }
    `;
    
    try {
      const response = await fetch(apiEndpoint, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-API-KEY': apiKey
        },
        body: JSON.stringify({ query: transactionsQuery })
      });
      
      const data = await response.json();
      
      if (data.errors) {
        throw new Error(data.errors[0].message);
      }
      
      const transactions = data.data.me.defaultAccount.transactions.edges;
      
      if (transactions.length > 0) {
        let transactionsHTML = `
          <div class="btc-transactions-container">
            <h3>Recent Transactions</h3>
            <div class="transactions-table-wrapper">
              <table class="transactions-table">
                <thead>
                  <tr>
                    <th>Date</th>
                    <th>Type</th>
                    <th>Amount (BTC)</th>
                    <th>Status</th>
                    <th>Memo</th>
                  </tr>
                </thead>
                <tbody>
        `;
        
        transactions.forEach(tx => {
          const transaction = tx.node;
          
          // Fix date formatting - parse the ISO string correctly
          const txDate = new Date(transaction.createdAt);
          const formattedDate = txDate.toLocaleString('en-US', {
            year: 'numeric',
            month: 'short',